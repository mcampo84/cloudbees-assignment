// Code generated by MockGen. DO NOT EDIT.
// Source: ticket.go

// Package grpc is a generated GoMock package.
package grpc

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pb "github.com/mcampo84/cloudbees-assignment/internal/proto/pb"
)

// MockTicket is a mock of Ticket interface.
type MockTicket struct {
	ctrl     *gomock.Controller
	recorder *MockTicketMockRecorder
}

// MockTicketMockRecorder is the mock recorder for MockTicket.
type MockTicketMockRecorder struct {
	mock *MockTicket
}

// NewMockTicket creates a new mock instance.
func NewMockTicket(ctrl *gomock.Controller) *MockTicket {
	mock := &MockTicket{ctrl: ctrl}
	mock.recorder = &MockTicketMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTicket) EXPECT() *MockTicketMockRecorder {
	return m.recorder
}

// GenerateReceipt mocks base method.
func (m *MockTicket) GenerateReceipt() *pb.Receipt {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateReceipt")
	ret0, _ := ret[0].(*pb.Receipt)
	return ret0
}

// GenerateReceipt indicates an expected call of GenerateReceipt.
func (mr *MockTicketMockRecorder) GenerateReceipt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateReceipt", reflect.TypeOf((*MockTicket)(nil).GenerateReceipt))
}
